{"version":3,"sources":["components/BgParticles.tsx","img/coffee-bk.png","components/Start.tsx","pages/Home.tsx","lib/GridLogic.ts","components/GameBoard.tsx","components/SideButton.tsx","components/Side.tsx","lib/Maps.ts","pages/Game.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["BgParticles","id","options","fullScreen","enable","zIndex","background","color","value","fpsLimit","interactivity","detectsOn","events","resize","modes","bubble","distance","duration","opacity","size","push","quantity","repulse","particles","animation","h","count","offset","speed","sync","s","l","links","width","collisions","move","direction","outMode","random","straight","number","density","value_area","shape","type","image","src","height","detectRetina","Start","className","coffeebk","alt","render","history","onClick","style","fontWeight","Home","useEffect","k","v","localStorage","setItem","transposeToColumns","matrix","cols","r","length","col","c","transposeToRows","compressRight","ret","filtered","filter","shiftct","Array","fill","concat","compressLeft","compressUp","transform","compressDown","mergeX","mergeY","Cell","n","GameBoard","map","useState","cellMatrix","updateCellMatrix","handleKeyDown","event","key","morphRight","morphDown","morphLeft","window","addEventListener","removeEventListener","idx","SideButton","construct","data","Side","points","objective","moves","getAllMaps","maps","getMap","_","Tutorial","level","setLevel","prev","console","log","App","process","basename","exact","path","component","Game","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4c8d336d.chunk.js","sourcesContent":["import React from 'react';\nimport Particles from \"react-tsparticles\";\n\nexport const BgParticles = () => {\n    // @ts-ignore\n    // @ts-ignore\n    // @ts-ignore\n    return (\n        <>\n            <Particles\n                id=\"particles\"\n                options={{\n                    fullScreen: {\n                        enable: true,\n                        zIndex: -1,\n                    },\n                    background: {\n                        color: {\n                            value: \"#FEF6EF\",\n                        },\n                    },\n                    fpsLimit: 60,\n                    interactivity: {\n                        detectsOn: \"canvas\",\n                        events: {\n                            resize: true,\n                        },\n                        modes: {\n                            bubble: {\n                                distance: 400,\n                                duration: 2,\n                                opacity: 0.8,\n                                size: 40,\n                            },\n                            push: {\n                                quantity: 4,\n                            },\n                            repulse: {\n                                distance: 100,\n                                duration: 0.4,\n                            },\n                        },\n                    },\n                    particles: {\n                        color: {\n                            value: \"#39d353\",\n                            animation: {\n                                h: {\n                                    count: 0,\n                                    enable: true,\n                                    offset: 0,\n                                    speed: 50,\n                                    sync: false,\n                                },\n                                s: {\n                                    count: 0,\n                                    enable: false,\n                                    offset: 0,\n                                    speed: 1,\n                                    sync: false,\n                                },\n                                l: {\n                                    count: 0,\n                                    enable: false,\n                                    offset: 0,\n                                    speed: 1,\n                                    sync: false,\n                                },\n                            },\n                        },\n                        links: {\n                            color: \"#b59174\",\n                            distance: 150,\n                            enable: true,\n                            opacity: 0.5,\n                            width: 1,\n                        },\n                        collisions: {\n                            enable: true,\n                        },\n                        move: {\n                            direction: \"none\",\n                            enable: true,\n                            outMode: \"bounce\",\n                            random: false,\n                            speed: 4,\n                            straight: false,\n                        },\n                        number: {\n                            density: {\n                                enable: true,\n                                value_area: 800,\n                            },\n                            value: 20,\n                        },\n                        opacity: {\n                            value: 0.9,\n                        },\n                        shape: {\n                            type: \"image\",\n                            options: {\n                                image: [{\n                                    // src: \"https://i.ibb.co/qMNxg9d/coffee-bk.png\",\n                                    src: \"https://i.ibb.co/nDshRQx/coffee-main.png\",\n                                    // src: \"https://lh3.googleusercontent.com/IpSbRWHYYo071Ao-sjBeW2Ts1KX-XeT0PzROx2b21wGgjNo5mojoLyTsdOXkWbtkW3o5JJ8wt3hpuXRTH4ZjIWlLcfqQn3DK5BTgIl-HkehljdCs9lAU53KmmVaLkc0SHvTKRlQUgyFlKCCgAhN-pJiat1PQP9lZEmMmUqu_ynd8aQvGPR-TOiK4gHaGUYbETs564jpav1O9DeP6ktPDacHHDdQr2GDx_XMk8zqvWVWo8ksbd-gMClf7TqSdd5gf1vwker-aI6UeMKWVwLl8deR0Y4ApQRMHDE7XDDTBnXdyeRu61fs6TvhBLB8Zl9ZjwM6Kpgw2QfECx7POBFeffFDw60UIcllKhOokrwvI4CNyMcsTIpOwqbP5ltmbTUDbF6keMLyVm9if3xLKPQjCHdodxZ-IsaK0kDRwXI6-z1UyijAkQf5W70cIki853FdWyMleWekw_OMtgwKu7QeHgsz2TaI0bDD8WZvBSsAWHuzglDKjZQ6Md9MTjTEnWuF0mvXgG5RcVY81dfMHUZCnl5inU55Be6zFES7r_2vBNT7Lnr0Jf6gixAaCBMEjKos0DYvCTe4vWhRz8NYN_MTPicbVUkhO0C19ZttwwwY5f5hcZbYE4uLYelLBjKhICW3J2EYLLcd4fQORHJMweTZnThMqxMfsV3GX6IS9jdcZIBqf-umbldqACK-31B74btS481Kl5i7QHzCe-4t-u2wVAlU=s512-no?authuser=0\",\n                                    // src: \"https://lh3.googleusercontent.com/NBWbXSfNwB83GR9C-Jvgx5SUj2-dYSEZLiFg-VcRBOVUwZAXXEmW0ujTcr5Vhgz1wmjpon861p0sGJRjnBZGz2UxQULko-0ge-vCcrrAmdTod1cuULTePmIDYxgyhgs17jvEvvb44IUuo8N4C82GNv85aUsfZXqNI4RC_LcprCHFL6YaibRGyN3j6ECYYr1Ur-Mr9kb4Frml7EXDCd2SXhNB_Ukgiy4w-Ug3DatK1Ae_6ZiM4KouUuqbUWETByrvseQOWY2hupaMAzaqpqCB7yPPoUq7P4kLSDtleZkTc69jAkPSf6_QoRaHkT9fiiXdDze73iZ0g50GorkzEdiVpxUaXQ9KlhVH0Gkv4L8YrWTqJd3fI_61f6FDXSWl_c_42Uuqkgi7gP6B7tHAnUwBEOJ6Ra5CoDG7akAw9ta_ekdiIDJ_fOWZigDmOrJ8JeUHW79dzhecMq27cBCP2TeKYmyTleMBRIyIAf2NrfoJwlRT1aryClBLa63TnAqtcdNOKWZ4oZwANiquXuDUHbFr7QaEh41Eq9xXd9GZV1MGj-95OzL218jwGXQ0DiyAPqm27WrRJHdZm7lE64w06Un2trTW0TUwWqN_Mxx7D21owKx9bCzIj-uJo4QW44pIncc2dNxGU-7sNf1pDpePUSE3O0Y74ou_WkR6p3Xu4ixdpZSesqzmRmo0VBtEKxFAq-MXBnc5YqDX616fKxxxXG1tVK8=s512-no?authuser=0\",\n                                    width: 512,\n                                    height: 512,\n                                }],\n                            },\n                        },\n                        size: {\n                            random: true,\n                            value: 30,\n                        },\n                    },\n                    detectRetina: true,\n                }}\n            />\n        </>\n    );\n}\n","export default __webpack_public_path__ + \"static/media/coffee-bk.0626c06f.png\";","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport coffeebk from '../img/coffee-bk.png';\nimport '../styles/home/home.scss';\n\nexport const Start: React.FC = () => {\n    return (\n        <>\n            <div className={\"flex-wrapper\"}>\n                <div id={\"cb-wrapper\"}>\n                    <img id={\"coffee-bk\"} src={coffeebk} alt={\"coffee-bk\"}/>\n                </div>\n                <div id={\"bt-wrapper\"}>\n                    <Route render={({history}) => (\n                        <span\n                            id={\"start-bt\"}\n                            onClick={() => {\n                                history.push(\"/play\")\n                            }}>\n                            Start!\n                        </span>\n                    )} />\n                </div>\n                <span style={{fontWeight: \"bold\"}}><u>NB: Only landscape mode is supported</u></span>\n            </div>\n        </>\n    )\n}\n","import React, { useEffect } from 'react';\nimport {BgParticles} from \"../components/BgParticles\";\nimport {Start} from \"../components/Start\";\n\nconst Home = () => {\n    const set = (k: string) => (v: any) => localStorage.setItem(k, v);\n    const get = (k: string) => localStorage.getItem(k);\n\n    useEffect(() => {\n        set(\"coffees\")(0);\n    }, []);\n\n    return (\n        <>\n            <BgParticles />\n            <Start />\n        </>\n    )\n}\n\nexport default Home;\n","import {NNA} from \"../types/aliases\";\n\n/**\n * Returns a matrix with its columns as rows\n * @param {NNA} matrix - Matrix to transform\n * @returns {NNA} Transformed matrix\n */\nconst transposeToColumns = (matrix: NNA): NNA => {\n\tlet cols: NNA = [];\n\tfor (let r = 0; r < matrix.length; r++) {\n\t\tlet col: Array<number> = [];\n\t\tfor (let c = 0; c < matrix.length; c++) {\n\t\t\tcol.push(matrix[c][r]);\n\t\t}\n\t\tcols.push(col);\n\t}\n\treturn cols;\n}\n\nconst transposeToRows = (matrix: NNA): NNA => {\n\treturn transposeToColumns(matrix);\n}\n\n/**\n * Returns a matrix with the truthy values compressed to the right and the falseys shifted to the left\n * @param {NNA} matrix - Matrix to compress\n * @returns {NNA} Compressed matrix\n */\nconst compressRight = (matrix: NNA): NNA => {\n\tlet ret: NNA = [];\n\tfor (let r = 0; r < matrix.length; r++) {\n\t\tlet filtered: Array<number> = matrix[r].filter(v => v);\n\t\tlet shiftct: Array<number> = Array(matrix[r].length - filtered.length).fill(0);\n\t\tret.push(shiftct.concat(filtered));\n\t}\n\treturn ret;\n}\n\n/**\n * Returns a matrix with the truthy values compressed to the left and the falseys shifted to the right\n * @param {NNA} matrix - Matrix to compress\n * @returns {NNA} Compressed matrix\n */\nconst compressLeft = (matrix: NNA): NNA => {\n\tlet ret: NNA = [];\n\tfor (let r = 0; r < matrix.length; r++) {\n\t\tlet filtered: Array<number> = matrix[r].filter(v => v);\n\t\tlet shiftct: Array<number> = Array(matrix[r].length - filtered.length).fill(0);\n\t\tret.push(filtered.concat(shiftct));\n\t}\n\n\treturn ret;\n}\n\n/**\n * Returns a transformed matrix with its truthy values compressed to the left\n * @param {NNA} matrix - Matrix to compress\n * @returns {NNA} Transformed compressed matrix\n */\nconst compressUp = (matrix: NNA): NNA => {\n\tlet transform: NNA = transposeToColumns(matrix);\n\treturn compressLeft(transform);\n}\n\n/**\n * Returns a transformed matrix with its truthy values compressed to the right\n * @param {NNA} matrix - Matrix to compress\n * @returns {NNA} Transformed compressed matrix\n */\nconst compressDown = (matrix: NNA): NNA => {\n\tlet transform: NNA = transposeToColumns(matrix);\n\treturn compressRight(transform);\n}\n\n/**\n * Returns a matrix with the values on the x-axis merged once\n * @param {NNA} matrix - Matrix to merge\n * @returns {NNA} Merged matrix\n */\nconst mergeX = (matrix: NNA): NNA => {\n\tfor (let r = 0; r < matrix.length; r++) {\n\t\tfor (let c = 0; c < matrix[r].length; c++) {\n\t\t\tif (c === matrix[r].length - 1) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (matrix[r][c] === matrix[r][c + 1]) {\n\t\t\t\tmatrix[r][c] = matrix[r][c] + matrix[r][c + 1];\n\t\t\t\tmatrix[r][c + 1] = 0;\n\t\t\t}\n\t\t}\n\t}\n\treturn matrix;\n}\n\n/**\n * Returns a transformed matrix with the values on the y-axis merged once\n * @param {NNA} matrix - Matrix to merge\n * @returns {NNA} Merged matrix\n */\nconst mergeY = (matrix: NNA): NNA => {\n\treturn transposeToRows(mergeX(matrix));\n}\n\n// Handling movement is compress -> merge -> compress\n\nexport const morphRight = (matrix: NNA): NNA => {\n\treturn compressRight(mergeX(compressRight(matrix)));\n}\n\nexport const morphLeft = (matrix: NNA): NNA => {\n\treturn compressLeft(mergeX(compressLeft(matrix)));\n};\n\nexport const morphUp = (matrix: NNA): NNA => {\n\treturn transposeToRows(compressUp(mergeY(compressUp(matrix))));\n}\n\nexport const morphDown = (matrix: NNA): NNA => {\n\treturn transposeToRows(compressDown(mergeY(compressDown(matrix))));\n}\n","import React, { useState, useEffect } from 'react';\nimport '../styles/game/cell.scss';\nimport '../styles/game/board.scss';\nimport { GameCell } from \"../types/interfaces\";\nimport { NNA } from \"../types/aliases\";\nimport { GameBoardProps } from \"../types/interfaces\";\nimport { morphRight, morphLeft, morphUp, morphDown } from \"../lib/GridLogic\";\n\nconst Cell: React.FC<GameCell> = ({n}) => {\n    return (\n        <div className={`cell type${n}`}>\n            {n > 0 ? n : \"\"}\n        </div>\n    );\n}\n\n// const newShootMatrix = (shootInit: number): NNA => {\n// \tlet grid: NNA = [];\n// \tfor (let r = 0; r < 8; r++) {\n// \t\tgrid.push([]);\n// \t\tfor (let c = 0; c < 8; c++) {\n// \t\t\tgrid[r].push(shootInit);\n// \t\t}\n// \t}\n// \treturn grid;\n// }\n\n// const newRandShootMatrix = (): NNA => {\n// \tconst shootArray: Array<number> = [0, 2, 4, 8, 16, 32];\n// \tlet grid: NNA = [];\n// \tfor (let r = 0; r < 8; r++) {\n// \t\tgrid.push([]);\n// \t\tfor (let c = 0; c < 8; c++) {\n// \t\t\tgrid[r].push(shootArray[Math.floor(Math.random() * 7)])\n// \t\t}\n// \t}\n// \treturn grid;\n// }\n\nexport const GameBoard: React.FC<GameBoardProps> = ({ map }) => {\n\t// const [cellMatrix, updateCellMatrix] = useState<NNA>(newShootMatrix(2));\n\t// const [cellMatrix, updateCellMatrix] = useState<NNA>(newRandShootMatrix());\n\tconst [cellMatrix, updateCellMatrix] = useState<NNA>(map);\n\n\tuseEffect(() => {\n\t\tupdateCellMatrix(map);\n\t}, [map]);\n\n\tconst handleKeyDown = (event: KeyboardEvent) => {\n\t\tswitch (event.key) {\n\t\t\tcase \"ArrowUp\":\n\t\t\t\tupdateCellMatrix(morphUp(cellMatrix));\n\t\t\t\tbreak;\n\t\t\tcase \"ArrowRight\":\n\t\t\t\tupdateCellMatrix(morphRight(cellMatrix));\n\t\t\t\tbreak;\n\t\t\tcase \"ArrowDown\":\n\t\t\t\tupdateCellMatrix(morphDown(cellMatrix));\n\t\t\t\tbreak;\n\t\t\tcase \"ArrowLeft\":\n\t\t\t\tupdateCellMatrix(morphLeft(cellMatrix));\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tuseEffect(() => {\n\t\twindow.addEventListener('keydown', handleKeyDown);\n\t\treturn () => {\n\t\t\twindow.removeEventListener('keydown', handleKeyDown);\n\t\t};\n\t});\n\n    return (\n        <div className={\"board-wrapper\"}>\n            <div className={\"board\"}>\n                {cellMatrix.map((r: number[]) => {\n                    return (\n                        r.map((c: number, idx: number) => {\n                            return <Cell n={c} key={idx}/>\n                        })\n                    )\n                })}\n            </div>\n        </div>\n    );\n}\n","import React, {useState, useEffect} from \"react\";\n\ninterface SideButtonProps {\n    construct: string;\n    data: string;\n}\n\nexport const SideButton: React.FC<SideButtonProps> = ({ construct, data }) => {\n    return (\n        <>\n            <div className={\"side-button\"}>\n                <span id={\"construct\"}><u>{construct}</u></span>\n                <br/>\n                <br/>\n                <span id={\"data\"}>{data}</span>\n            </div>\n        </>\n    )\n}\n","import React, {useState, useEffect} from 'react';\nimport {SideButton} from \"./SideButton\";\nimport \"../styles/game/side.scss\"\n\ninterface SideProps {\n    points: string;\n    objective: string;\n    moves: string;\n}\n\nexport const Side: React.FC<SideProps> = ({points, objective, moves}) => {\n    return (\n        <>\n            <div id={\"side-wrapper\"}>\n                {/*<h1>Side</h1>*/}\n                <section id={\"points\"}>\n                    <SideButton construct={\"Points\"} data={points}/>\n                </section>\n\n                <section id={\"objective\"}>\n                    <SideButton construct={\"Objective\"} data={objective}/>\n                </section>\n\n                <section id={\"Moves\"}>\n                    <SideButton construct={\"Moves\"} data={moves}/>\n                </section>\n\n                {/* Experimental Stuff */}\n                {/*<section id={\"Completed\"}>*/}\n                {/*    <SideButton construct={\"[Experimental] Percentage\"} data={\"0%\"}/>*/}\n                {/*</section>*/}\n            </div>\n        </>\n    )\n}\n","import { NNA } from \"../types/aliases\";\nimport maps from \"../data/maps.json\";\nimport { Maps } from \"../types/interfaces\";\n\nconst retErrMap = (): NNA => {\n\treturn [...Array(8)].map(_ => Array(8).fill(2));\n}\n\nexport const getAllMaps = (): Maps | null => {\n\treturn maps;\n}\n\nexport const getMap = (map: number): NNA => {\n\tconst maps = getAllMaps();\n\tif (maps === null) return retErrMap();\n\treturn maps[map];\n}\n\n","import React, {useState, useEffect} from 'react';\nimport {GameBoard} from \"../components/GameBoard\";\nimport {Side} from \"../components/Side\";\nimport {getMap} from \"../lib/Maps\";\nimport \"../styles/game/game.scss\"\n\nconst Tutorial = () => {\n    const [level, setLevel] = useState<number>(0);\n\n    const incrementLevel = () => {\n        setLevel(prev => prev + 1);\n        console.log(level);\n    };\n\n    return (\n    <>\n        <div id={\"master\"}>\n            {/*<h1 style={{textAlign: 'center'}}>&nbsp;</h1>*/}\n            <div id={\"game-wrapper\"}>\n                <GameBoard map={getMap(level)}/>\n                <Side points={\"0\"} objective={\"Get the 8 tile\"} moves={\"2\"} />\n            </div>\n            {/*<GameBoard map={getMap(1)} />*/}\n            <button onClick={incrementLevel}>Increment Level!</button>\n        </div>\n    </>\n)\n}\n\nexport default Tutorial;\n\n/*\n * getMap(0) -> maxMoves = 2\n * getMap(1) -> maxMoves = 3\n */\n","import React from 'react';\nimport './styles/app/app.scss';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport Home from './pages/Home';\nimport Game from './pages/Game';\n\nfunction App() {\n    console.log(process.env.PUBLIC_URL);\n    return (\n        <HashRouter basename={process.env.PUBLIC_URL}>\n            <Switch>\n                <Route exact path={\"/\"} component={Home} />\n                <Route exact path={\"/play\"} component={Game} />\n            </Switch>\n        </HashRouter>\n    )\n  // return (\n  //     <Router basename={process.env.PUBLIC_URL}>\n  //             <Switch>\n  //                 <Route exact path={\"/strate/\"}>\n  //                     <Home />\n  //                 </Route>\n  //                 <Route path={\"/strate/tutorial\"}>\n  //                     <Tutorial />\n  //                 </Route>\n  //                 <Route exact path={\"/\"} component={Home} />\n  //                 <Route exact path={\"/tutorial\"} component={Tutorial} />\n  //             </Switch>\n  //     </Router>\n  // );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}